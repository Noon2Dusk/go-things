// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.15.0

package db

import (
	"database/sql/driver"
	"fmt"
)

type SpaceshipStatus string

const (
	SpaceshipStatusOperational SpaceshipStatus = "operational"
	SpaceshipStatusInrepair    SpaceshipStatus = "in repair"
	SpaceshipStatusDestroyed   SpaceshipStatus = "destroyed"
)

func (e *SpaceshipStatus) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = SpaceshipStatus(s)
	case string:
		*e = SpaceshipStatus(s)
	default:
		return fmt.Errorf("unsupported scan type for SpaceshipStatus: %T", src)
	}
	return nil
}

type NullSpaceshipStatus struct {
	SpaceshipStatus SpaceshipStatus
	Valid           bool // Valid is true if String is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullSpaceshipStatus) Scan(value interface{}) error {
	if value == nil {
		ns.SpaceshipStatus, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.SpaceshipStatus.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullSpaceshipStatus) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return ns.SpaceshipStatus, nil
}

type Spaceship struct {
	ID        int32
	Name      string
	Class     string
	Crew      int32
	Image     string
	Value     string
	Status    SpaceshipStatus
	Armaments string
}
